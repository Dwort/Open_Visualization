import React, { useEffect, useState } from "react";
import Chart from "chart.js/auto";
import axios from "axios";

const ChartComponent = () => {
  const [chartData, setChartData] = useState([]);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await axios.get('http://localhost:8000/api/data/');
        setChartData(response.data);
      } catch (error) {
        console.error("Error fetching data:", error);
      }
    };

    fetchData();
  }, []); // Порожній масив означає, що ефект викликається тільки після монтування компонента

  useEffect(() => {
    // Після отримання даних оновіть графік
    if (chartData.length > 0) {
      const ctx = document.getElementById("myChart").getContext("2d");
      new Chart(ctx, {
        type: "bar",
        data: {
          labels: chartData.map((data) => data.name),
          datasets: [
            {
              label: "Population",
              data: chartData.map((data) => parseInt(data.population)),
              backgroundColor: "rgba(75, 192, 192, 0.2)",
              borderColor: "rgba(75, 192, 192, 1)",
              borderWidth: 1,
            },
          ],
        },
        options: {
          legend: { display: false },
          title: {
            display: true,
            text: "Countries population",
          },
          scales: {
            yAxes: [
              {
                ticks: {
                  beginAtZero: true,
                  callback: function (value, index, values) {
                    if (value === 0) {
                      return "0";
                    }

                    var suffixes = ["", "K", "M", "B"];
                    var order = Math.floor(
                      Math.log(Math.abs(value)) / Math.log(1000)
                    );
                    var suffix = suffixes[order];
                    var shortValue = value / Math.pow(1000, order);

                    if (shortValue % 1 !== 0) {
                      shortValue = shortValue.toFixed(1);
                    }

                    return shortValue + suffix;
                  },
                },
              },
            ],
          },
        },
      });
    }
  }, [chartData]); // Ефект викликається при зміні chartData

  return <canvas id="myChart" width="400" height="200"></canvas>;
};

export default ChartComponent;